<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fivemeter.website.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.fivemeter.website.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pass" jdbcType="VARCHAR" property="userPass" />
    <result column="user_gender" jdbcType="VARCHAR" property="userGender" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, role_id, user_name, user_pass, user_gender
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.fivemeter.website.model.User">
    insert into users (id, user_id, role_id, 
      user_name, user_pass, user_gender
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.fivemeter.website.model.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPass != null">
        user_pass,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.fivemeter.website.model.User">
    update users
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null">
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.fivemeter.website.model.User">
    update users
    set user_id = #{userId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>